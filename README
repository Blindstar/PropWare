PropWare - README
Author:    David Zemon
Purpose:   Generic C library files for the Parallax Propeller Microcontroller

Getting Started - Choose one or the other:
    At the Terminal:
        1) Create a project directory and your source files
             1a) All C/C++ files must have an accompanying header file with a
			     similar name; (i.e., if you have a file main.c, you must have
			     main.h as well)
        2) Create links to or copy all source files from PropWare into your
           project directory (compiling the library every time allows for
           pre-processor optimizations)
        3) Create a Makefile for the project (very simple, see any of the Demo
           projects for examples)
        4) Create a "Debug" folder in the project directory and cd into it
        5) Type "make -f ../Makefile" and watch the magic happen

    From Eclipse (recommended):
        1) Install Eclipse and the CDT plugin
        2) Create a C/C++ project; Select cross compiler (No need to set the
           compiler or path, we'll use a Makefile still)
        3) Once the project is created and you've exited the dialog box,
		   right-click on the project in the Project Pane and choose
		   "Properties"
        4) Click on "C/C++ Build" menu option to the left and then find the
           "Builder Settings" tab
        5) Uncheck "Use default build command" and ensure the "Build command"
           text box reads "make -f ../Makefile"
        6) In the left-pane, expand the "C/C++ Build" menu and select "Settings"
        7) In the "Tool Settings" tab, find "Cross GCC Compiler" and then
           "Includes" beneath that. Add two lines to "Include paths (-l)", one
           should be the path to PropWare, and another should be the path to
           PropGCC's include folder (on Linux, /opt/parallax/include)
        8) Create files based on the same rules as "At the Terminal" (steps 1a
		   and 2) and add source and header files where appropriate
        9) That's it! You now have Eclipse up and running with PropGCC and
           PropWare! All of its auto-completion, code highlighting, and quick
           and easy compilation!


*NOTE: You are welcome to edit common.mk to not search for header files; See
       the comment near the top of the file for my reasoning behind including
       it and decide for yourself

TODO:
    - SD & FAT16/32 driver
        - Traverse directories (implies ability to open files/directories not
          in the current directory)
    - Created shared library file(s)
        - ***Likely not going to happen: pre-compiled files implies an
          inability to have pre-processor optimizations
    - Re-create SPI library to use inline assembly and FCACHE instead of
      a second cog
    - Add "SPIShiftIn_Multi", which will repeatedly shift in values and allow
      for the selection between *_Fast or normal using a parameter

Further description will come soon...

